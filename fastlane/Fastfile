# Global variables to simplify the individual adjustment
PROJECT_NAME = "DesmosProfileManager"
XCODE_PROJECT = "./ios/#{PROJECT_NAME}.xcodeproj"
XCODE_WORKSPACE = "./ios/#{PROJECT_NAME}.xcworkspace"
OUTPUT_DIRECTORY = "./fastlane/builds/"

DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

def build_number_from_git(xcodeproj)
    git_tag = last_git_tag
    version_number = git_tag.sub('v', '')
    increment_build_number(
        xcodeproj: xcodeproj,
        build_number: version_number
    )
end

platform :ios do
  lane :closed_beta do
    keychain_name = TEMP_KEYCHAIN_USER
    keychain_password = TEMP_KEYCHAIN_PASSWORD
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,            
      duration: 1200,            
      in_house: false
    )
    
    build_number_from_git(XCODE_PROJECT)
    
    cocoapods(
      clean_install: true,
      podfile: "./ios/Podfile"
    )

    match(
      type: 'appstore',
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      git_basic_authorization: Base64.strict_encode64(ENV["GIT_AUTHORIZATION"]),
      readonly: true,
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

    gym(
      scheme: PROJECT_NAME,
      workspace: XCODE_WORKSPACE,
      configuration: "Release",
      output_directory: OUTPUT_DIRECTORY,
      output_name: "#{PROJECT_NAME}.ipa",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
            DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
        }
      }
    )

    pilot(
      apple_id: "#{DEVELOPER_APP_ID}",
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      skip_waiting_for_build_processing: false,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false,
      ipa: "#{OUTPUT_DIRECTORY}#{PROJECT_NAME}.ipa"
    )

    delete_temp_keychain(keychain_name)
  end
end

###############################################################

platform :android do
  desc "Build the Android application."
    lane :build do
      gradle(task: "clean", project_dir: "android/")
      gradle(
        task: "assemble",
        build_type: "Release",
        print_command: false,
        project_dir: "android/",
        properties: {
          "android.injected.signing.store.file" => ENV["ANDROID_KEYSTORE"],
          "android.injected.signing.store.password" => ENV["ANDROID_SIGNING_STORE_PASSWORD"],
          "android.injected.signing.key.alias" => ENV["ANDROID_SIGNING_ALIAS"],
          "android.injected.signing.key.password" => ENV["ANDROID_SIGNING_KEY_PASSWORD"],
        }
      )
    end

    desc 'Release for internal testing'
      lane :internal_release_to_play_store do
        build
        supply(
          package_name: 'com.desmoslabs.dpm',
          track: 'internal',
          json_key: ENV['PLAYSTORE_JSON_KEY'],
          apk: 'android/app/build/outputs/apk/release/app-release.apk',
        )
      end
end